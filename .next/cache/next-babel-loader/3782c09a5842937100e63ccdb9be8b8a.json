{"ast":null,"code":"var _jsxFileName = \"/Users/Prabesh/Desktop/bk/preview/src/components/@core/active-link/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\n\nconst ActiveLink = (_ref) => {\n  let {\n    children,\n    href,\n    activeClassName = \"active\"\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"href\", \"activeClassName\"]);\n\n  const router = useRouter();\n  const child = React.Children.only(children);\n  let className = child.props.className || \"\";\n\n  if (router.asPath === href && activeClassName) {\n    className = `${className} ${activeClassName}`.trim();\n  }\n\n  return __jsx(Link, _extends({\n    href: href\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), React.cloneElement(child, {\n    className\n  }));\n};\n\nexport default ActiveLink;","map":{"version":3,"sources":["/Users/Prabesh/Desktop/bk/preview/src/components/@core/active-link/index.tsx"],"names":["Link","useRouter","React","ActiveLink","children","href","activeClassName","props","router","child","Children","only","className","asPath","trim","cloneElement"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,UAKb;AAAA,MALc;AAClBC,IAAAA,QADkB;AAElBC,IAAAA,IAFkB;AAGlBC,IAAAA,eAAe,GAAG;AAHA,GAKd;AAAA,MADDC,KACC;;AACJ,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAMQ,KAAK,GAAGP,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBP,QAApB,CAAd;AAEA,MAAIQ,SAAS,GAAGH,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAzC;;AAEA,MAAIJ,MAAM,CAACK,MAAP,KAAkBR,IAAlB,IAA0BC,eAA9B,EAA+C;AAC7CM,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGN,eAAgB,EAAhC,CAAkCQ,IAAlC,EAAZ;AACD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAET;AAAZ,KAAsBE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGL,KAAK,CAACa,YAAN,CAAmBN,KAAnB,EAA0B;AAAEG,IAAAA;AAAF,GAA1B,CADH,CADF;AAKD,CArBD;;AAuBA,eAAeT,UAAf","sourcesContent":["import Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\n\nconst ActiveLink = ({\n  children,\n  href,\n  activeClassName = \"active\",\n  ...props\n}) => {\n  const router = useRouter();\n\n  const child = React.Children.only(children);\n\n  let className = child.props.className || \"\";\n\n  if (router.asPath === href && activeClassName) {\n    className = `${className} ${activeClassName}`.trim();\n  }\n\n  return (\n    <Link href={href} {...props}>\n      {React.cloneElement(child, { className })}\n    </Link>\n  );\n};\n\nexport default ActiveLink;\n"]},"metadata":{},"sourceType":"module"}